import{_ as e,c as a,o as s,N as r}from"./chunks/framework.0799945b.js";const u=JSON.parse('{"title":"js题&css题","description":"","frontmatter":{},"headers":[],"relativePath":"FrontEnd/js&css/index.md"}'),t={name:"FrontEnd/js&css/index.md"},o=r('<h1 id="js题-css题" tabindex="-1">js题&amp;css题 <a class="header-anchor" href="#js题-css题" aria-label="Permalink to &quot;js题&amp;css题&quot;">​</a></h1><p>收集我面试时候遇到的以及平常学习的</p><p>学习资料：<a href="https://github.com/Sunny-117/js-challenges" target="_blank" rel="noreferrer">https://github.com/Sunny-117/js-challenges</a></p><h2 id="基础题" tabindex="-1">基础题 <a class="header-anchor" href="#基础题" aria-label="Permalink to &quot;基础题&quot;">​</a></h2><p>1.url参数解析</p><p>2.url加请求参数</p><p>3.下划线转驼峰</p><p>4.随机打乱数组</p><p>5.数组扁平化、去重、排序</p><p>6.节流和防抖</p><h2 id="实现promise" tabindex="-1">实现promise <a class="header-anchor" href="#实现promise" aria-label="Permalink to &quot;实现promise&quot;">​</a></h2><p>1.promise.all</p><p>2.promise.race</p><h2 id="promise场景题" tabindex="-1">promise场景题 <a class="header-anchor" href="#promise场景题" aria-label="Permalink to &quot;promise场景题&quot;">​</a></h2><p>1.实现如果上一次请求未完成，则不响应</p><p>2.修改promise.all使得即使有一个请求错误，依旧能返回所有请求</p><p>3.promise.all顺序执行</p><h2 id="原生手写题" tabindex="-1">原生手写题 <a class="header-anchor" href="#原生手写题" aria-label="Permalink to &quot;原生手写题&quot;">​</a></h2>',18),p=[o];function i(n,l,c,h,d,m){return s(),a("div",null,p)}const f=e(t,[["render",i]]);export{u as __pageData,f as default};
